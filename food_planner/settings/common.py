"""
Django settings for food_planner project.

Generated by 'django-admin startproject' using Django 5.1.1.

For more information on this file, see
https://docs.djangoproject.com/en/5.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.1/ref/settings/
"""

from pathlib import Path
import os

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.1/howto/deployment/checklist/


# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ['localhost',
                 '127.0.0.1',
                 'https://fresh-offer-food-planner.gptengineer.run',
                 'https://preview--fresh-offer-food-planner.gptengineer.run',
                 'food-planner-api-4112516d9b5e.herokuapp.com']

CORS_ALLOWED_ORIGINS = [
    'https://fresh-offer-food-planner.gptengineer.run',
    'https://preview--fresh-offer-food-planner.gptengineer.run'
]

CORS_ALLOW_CREDENTIALS = True

EVENTSTREAM_ALLOW_ORIGIN = '*' #Might not be the safest method but a quick fix
EVENTSTREAM_ALLOW_CREDENTIALS = True

EVENTSTREAM_ALLOW_HEADERS = 'Authorization'

# settings.py


# Celery Configuration Options
CELERY_ACCEPT_CONTENT = ['application/json']
CELERY_TASK_SERIALIZER = 'json'
CELERY_RESULT_SERIALIZER = 'json'
CELERY_TIMEZONE = 'UTC'

GRIP_URL = 'http://localhost:5561'


CHANNEL_LAYERS = {
    'default': {
        'BACKEND': 'channels_redis.core.RedisChannelLayer',
        'CONFIG': {
            'hosts': [('redis', 6379)],
        },
    },
}

# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'corsheaders',
    'rest_framework',
    'adrf',
    'channels',
    'django_eventstream',
    'core',
]

MIDDLEWARE = [
    'django_grip.GripMiddleware',
    'corsheaders.middleware.CorsMiddleware',
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'food_planner.urls'

CSRF_TRUSTED_ORIGINS = ['https://food-planner-api-4112516d9b5e.herokuapp.com',
                        'https://fresh-offer-food-planner.gptengineer.run',
                        'https://preview--fresh-offer-food-planner.gptengineer.run']


TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [BASE_DIR / 'templates'],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

ASGI_APPLICATION = 'food_planner.asgi.application'

WSGI_APPLICATION = 'food_planner.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.1/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}


# Password validation
# https://docs.djangoproject.com/en/5.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.1/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.1/howto/static-files/

# Define the directory for static files
STATIC_URL = '/static/'

# Define the directory for collected static files
STATIC_ROOT = 'staticfiles'

# If you have additional static files during development
STATICFILES_DIRS = [
    os.path.join(BASE_DIR, 'static'),  # If you have a static folder in your project
]


# Default primary key field type
# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

PLAYWRIGHT_BUILDPACK_BROWE = 'chromium'
BUILDPACK_BROWSERES_INSTALL_PATH = 'browsers'


GOOGLE_MAPS_API_KEY = os.environ.get('GOOGLE_MAPS_API_KEY')
OPENAI_API_KEY = os.environ.get('OPENAI_API_KEY')
DENDRITE_API_KEY = os.environ.get('DENDRITE_API_KEY')
ANTHROPIC_API_KEY = os.environ.get('ANTHROPIC_API_KEY')
SPOONACULAR_API_KEY = os.environ.get('SPOONACULAR_API_KEY')